/**
 * reset.css by Swen Gorschewski
 * based on Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, menu, nav, output, ruby, section, summary, time, mark, audio, video, input, textarea, button {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

button {
  cursor: pointer;
  color: inherit;
  background-color: inherit;
  font: inherit;
  padding: 0;
  margin: 0;
  border: none;
  outline: none; }

::-webkit-input-placeholder {
  line-height: normal; }

.group:after {
  content: "";
  display: table;
  clear: both; }

body {
  position: absolute;
  width: 100%;
  height: 100%; }

nav {
  width: 100%;
  height: 3em; }

.content {
  width: 100%;
  height: -webkit-calc(100% - 3em);
  height: calc(100% - 3em); }

@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 300;
  src: local('Roboto Light'), local('Roboto-Light'), url('/fonts/Roboto_300.eot?#iefix') format('embedded-opentype'), url('/fonts/Roboto_300.woff') format('woff'), url('/fonts/Roboto_300.ttf') format('truetype'), url('/fonts/Roboto_300.svg#Roboto') format('svg'); }

@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  src: local('Roboto'), local('Roboto-Regular'), url('/fonts/Roboto_400.eot?#iefix') format('embedded-opentype'), url('/fonts/Roboto_400.woff') format('woff'), url('/fonts/Roboto_400.ttf') format('truetype'), url('/fonts/Roboto_400.svg#Roboto') format('svg'); }

.shadow-z1 {
  -webkit-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.26);
          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.26); }

.panel {
  width: 100%;
  height: 3em;
  position: relative;
  color: #FFFFFF;
  background-color: #009688;
  z-index: 1; }
  .panel .panel-brand {
    font-size: 1.3em;
    float: left;
    margin-bottom: 0;
    padding: 0.62em 0 0 1.24em; }
  .panel .panel-options {
    float: right;
    height: 100%; }
  .panel .panel-button {
    float: left;
    height: 100%;
    padding: 0 2em;
    -webkit-transition: background-color 0.2s;
            transition: background-color 0.2s; }
    .panel .panel-button:hover {
      background-color: #00b09f; }

.input-group {
  margin: 3em 2em;
  position: relative; }
  .input-group label {
    color: #bcbcbc;
    font-weight: normal;
    position: absolute;
    pointer-events: none;
    top: 0.8em;
    left: 0;
    -webkit-transition: 0.2s ease all;
            transition: 0.2s ease all;
    -webkit-transform-origin: left;
        -ms-transform-origin: left;
            transform-origin: left; }
  .input-group input {
    display: block;
    width: 100%;
    padding: 0.5em 0;
    border-bottom: 1px solid #bcbcbc; }
    .input-group input:-webkit-autofill {
      -webkit-box-shadow: 0 0 0px 1000px white inset; }
  .input-group input:focus ~ label, .input-group input:valid ~ label {
    top: -1.2em;
    -webkit-transform: scale(0.8);
        -ms-transform: scale(0.8);
            transform: scale(0.8); }
  .input-group input:focus ~ label {
    color: #009688; }
  .input-group input:focus ~ .bar:before, .input-group input:focus ~ .bar:after {
    width: 50%; }
  .input-group input:focus {
    outline: none;
    border-color: #009688; }
  .input-group .bar {
    position: relative;
    display: block;
    width: 100%; }
  .input-group .bar:before, .input-group .bar:after {
    content: '';
    height: 2px;
    width: 0;
    bottom: 1px;
    position: absolute;
    background: #009688;
    -webkit-transition: 0.2s ease all;
            transition: 0.2s ease all; }
  .input-group .bar:before {
    left: 50%; }
  .input-group .bar:after {
    right: 50%; }

.input-group:last-of-type {
  margin-bottom: 0; }

.button {
  border: 0.2em;
  position: relative;
  color: #009688;
  text-transform: uppercase;
  margin: 1.3em 1em;
  padding: 0.7em 1em;
  background-color: inherit; }

body {
  font-family: 'Roboto', sans-serif; }

h1 {
  font-size: 1.3em;
  margin-bottom: 1em; }

h2 {
  font-size: 1.1em;
  margin-bottom: 1em; }

p {
  line-height: 1.5em;
  margin-bottom: 1.5em; }
  p:last-child {
    margin-bottom: 0; }

.login-form {
  width: 24em;
  background-color: #ffffff; }
  .login-form h1 {
    font-size: 1.6em;
    color: #009688;
    font-weight: 300;
    margin: 1em 0 0 1em;
    text-transform: uppercase; }

.center-content {
  width: 100%;
  height: 100%;
  background-color: #E4E4E4;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

/* 
 *	Place the scss code for dom states here
 */

/*# sourceMappingURL=data:application/json;base64, */